{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maksi\\\\Desktop\\\\todo-app\\\\src\\\\TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoApp() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [editTask, setEditTask] = useState(null);\n  const addTask = () => {\n    if (newTask) {\n      if (editTask) {\n        // If there's an editTask, update it\n        const updatedTasks = tasks.map(task => task.id === editTask.id ? {\n          ...task,\n          text: newTask\n        } : task);\n        setTasks(updatedTasks);\n        setEditTask(null);\n      } else {\n        // If not, add a new task\n        setTasks([...tasks, {\n          id: Date.now(),\n          text: newTask\n        }]);\n      }\n      setNewTask('');\n    }\n  };\n  const removeTask = id => {\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    setTasks(updatedTasks);\n  };\n  const editTaskItem = task => {\n    setNewTask(task.text);\n    setEditTask(task);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: editTask ? 'Update your item' : 'Add a new task',\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: editTask ? 'Update' : 'Add'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTask(task.id),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => editTaskItem(task),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoApp, \"m0b/6gNqsw5LcdMjmRPBBkQ1nXA=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoApp","_s","tasks","setTasks","newTask","setNewTask","editTask","setEditTask","addTask","updatedTasks","map","task","id","text","Date","now","removeTask","filter","editTaskItem","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/maksi/Desktop/todo-app/src/TodoApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TodoApp() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n  const [editTask, setEditTask] = useState(null);\r\n\r\n  const addTask = () => {\r\n    if (newTask) {\r\n      if (editTask) {\r\n        // If there's an editTask, update it\r\n        const updatedTasks = tasks.map((task) =>\r\n          task.id === editTask.id ? { ...task, text: newTask } : task\r\n        );\r\n        setTasks(updatedTasks);\r\n        setEditTask(null);\r\n      } else {\r\n        // If not, add a new task\r\n        setTasks([...tasks, { id: Date.now(), text: newTask }]);\r\n      }\r\n      setNewTask('');\r\n    }\r\n  };\r\n\r\n  const removeTask = (id) => {\r\n    const updatedTasks = tasks.filter((task) => task.id !== id);\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const editTaskItem = (task) => {\r\n    setNewTask(task.text);\r\n    setEditTask(task);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo App</h1>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder={editTask ? 'Update your item' : 'Add a new task'}\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button onClick={addTask}>\r\n          {editTask ? 'Update' : 'Add'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id}>\r\n            {task.text}\r\n            <button onClick={() => removeTask(task.id)}>Remove</button>\r\n            <button onClick={() => editTaskItem(task)}>Edit</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}